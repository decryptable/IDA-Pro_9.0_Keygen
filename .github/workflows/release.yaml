name: Build and Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install pywin32 dependency (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pip install pywin32
        shell: pwsh

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Extract 4-digit version number
        id: get_version
        shell: bash
        run: |
          raw="${GITHUB_REF_NAME#v}"
          IFS='.' read -ra parts <<< "$raw"
          major="${parts[0]:-0}"
          minor="${parts[1]:-0}"
          patch="${parts[2]:-0}"
          build="${parts[3]:-0}"
          echo "version=$major.$minor.$patch.$build" >> $GITHUB_OUTPUT

      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: IDA_Keygen.py
          mode: onefile
          enable-plugins: tk-inter
          enable-console: false
          product-name: IDA Keygen
          file-description: Keygen for IDA Pro
          file-version: ${{ steps.get_version.outputs.version }}
          product-version: ${{ steps.get_version.outputs.version }}
          copyright: decryptable
          company-name: decryptable
          windows-console-mode: disable
          windows-uac-admin: true
          windows-icon-from-ico: icon.ico
          macos-target-arch: arm64
          macos-app-version: ${{ steps.get_version.outputs.version }}
          macos-signed-app-name: dev.decryptable.ida.keygen
          macos-app-name: IDA Keygen
          macos-app-icon: icon.png
          linux-icon: icon.png

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-IDA_Keygen-v${{ steps.get_version.outputs.version }}
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*
          include-hidden-files: true

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          make_latest: true
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: ./artifacts/**/*

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
